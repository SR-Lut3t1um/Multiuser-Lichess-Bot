import com.google.protobuf.gradle.id
import com.google.protobuf.gradle.plugins
import com.google.protobuf.gradle.protobuf
import com.google.protobuf.gradle.protoc

/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/6.8.3/userguide/building_java_projects.html
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    application
    idea
    id("org.sonarqube").version("3.1.1")
    id("com.google.protobuf").version("0.8.15")
}

sonarqube {
    properties {
        property("sonar.projectKey", "SR-Lut3t1um_Multiuser-Lichess-Bot")
        property("sonar.organization", "sr-lut3t1um")
        property("sonar.host.url", "https://sonarcloud.io")
    }
}

java {
    toolchain {
        languageVersion.set(JavaLanguageVersion.of(16))
    }
}

repositories {
    // Use JCenter for resolving dependencies.
    mavenCentral()
    maven(url = "https://jitpack.io")
}

dependencies {
    // Use JUnit Jupiter API for testing.
    testImplementation("org.junit.jupiter:junit-jupiter-api:5.7.1")

    // Use JUnit Jupiter Engine for testing.
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine")

    // This dependency is used to work with json.
    implementation("com.fasterxml.jackson.core:jackson-databind:2.12.3")

    // This dependency is used to check if a chess move is legal.
    implementation("com.github.bhlangonijr:chesslib:1.3.0")

    // Logging framework
    implementation("org.tinylog:tinylog-api:2.2.1")
    implementation("org.tinylog:tinylog-impl:2.2.1")

    // grpc
    implementation("com.google.protobuf:protobuf-java:3.15.8")
    implementation("io.grpc:grpc-stub:1.37.0")
    implementation("io.grpc:grpc-netty:1.37.0")
    implementation("io.grpc:grpc-protobuf:1.37.0")
    implementation("io.grpc:grpc-services:1.37.0")

    // required for the @generated annotation
    implementation("javax.annotation:javax.annotation-api:1.3.2")
}

application {
    // Define the main class for the application.
    mainClass.set("multiuser.lichess.bot.App")
}

tasks.test {
    // Use junit platform for unit tests.
    useJUnitPlatform()
}



protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:3.15.8"
    }

    protobuf.protobuf.plugins {
        id("grpc") {
            artifact = "io.grpc:protoc-gen-grpc-java:1.37.0"
        }
    }

    generateProtoTasks.all().configureEach {
        this.plugins {
            add(create("grpc"))
        }
    }
}
